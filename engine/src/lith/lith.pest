// Indented in hopes that your editor provides folding.

// Foundational ////////////////////////////////////////////////////////////////

	WHITESPACE = _{ " " | "\t" | NEWLINE }
	COMMENT = { BlockComment | LineComment }
	LineComment = { "//" ~ (!("/" | "!") | "//") ~ "\n"* | "//" }
	BlockComment = {
		"/*" ~ (!("*" | "!") | "**" | BlockCommentOrDoc) ~
		(BlockCommentOrDoc | (!"*/" ~ ANY))* ~
		"*/" | "/**/" | "/***/"
	}
	InnerLineDoc = { "//!" ~ !("\n" | IsolatedCr)* }
	InnerBlockDoc = {
		"/*!" ~ (BlockCommentOrDoc | (!("*/" | IsolatedCr) ~ ANY))* ~ "*/"
	}
	OuterLineDoc = { "///" ~ (!"/" ~ !("\n" | IsolatedCr)*)? }
	OuterBlockDoc = {
		"/**" ~
		(!"*" | BlockCommentOrDoc) ~
		(BlockCommentOrDoc | (!("*/" | IsolatedCr) ~ ANY))* ~
		"*/"
	}
	BlockCommentOrDoc = { BlockComment | OuterBlockDoc | InnerBlockDoc }
	IsolatedCr = { "\r" ~ (!"\n" ~ ANY) }

	Ellipsis = { "..." }
	ScopeRes = { "::" }
	Ident = @{ ASCII_ALPHA ~ (ASCII_ALPHANUMERIC | "_")* }
	BlockLabel = @{ ASCII_ALPHA ~ (ASCII_ALPHANUMERIC | "_")* ~ ":" }

// Primitives //////////////////////////////////////////////////////////////////

	SignedIntType = { "int8" | "int16" | "int" | "int64" | "int128" }
	UnsignedIntType = { "uint8" | "uint16" | "uint" | "uint64" | "uint128" }
	IntType = { SignedIntType | UnsignedIntType }
	FloatType = { "float" | "double" }

// Literals ////////////////////////////////////////////////////////////////////

	Literal = { NullLit | BoolLit | NumLit | CharLit | StringLit }

	NullLit = { "null" }
	BoolLit = { "true" | "false" }

	QuoteEscape = { "\\'" | "\\\"" }
	AsciiEscape = @{
		("\\x" ~ ASCII_OCT_DIGIT ~ ASCII_HEX_DIGIT) |
		"\\n" | "\\r" | "\\t" | "\\\\" | "\\0"
	}
	UnicodeEscape = @{ "\\u" ~ (ASCII_HEX_DIGIT ~ "_"*){1,6} }
	CharLit = @{
		"'" ~
		(!("'" | "\\" | "\n" | "\r" | "\t") ~ ANY
		| QuoteEscape | AsciiEscape | UnicodeEscape) ~
		"'"
	}

	StringLit = @{
		"\"" ~ (
			!("\"" | "\\" | IsolatedCr) ~
			QuoteEscape | AsciiEscape | UnicodeEscape
		)* ~ "\""
	}

	NumLit = { IntLit | FloatLit }
	IntLit = @{ (DecLit | BinLit | OctLit | HexLit) ~ IntSuffix? }
	IntSuffix = {
		"i8" | "i16" | "i32" | "i64" | "i128" |
		"u8" | "u16" | "u32" | "u64" | "u128"
	}
	DecLit = @{ ASCII_DIGIT ~ (ASCII_DIGIT | "_")* }
	BinLit = @{
		"0b" ~
		(ASCII_BIN_DIGIT | "_")* ~
		ASCII_BIN_DIGIT ~
		(ASCII_BIN_DIGIT | "_")*
	}
	OctLit = @{
		"0o" ~
		(ASCII_OCT_DIGIT | "_")* ~
		ASCII_OCT_DIGIT ~
		(ASCII_OCT_DIGIT | "_")*
	}
	HexLit = @{
		"0x" ~
		(ASCII_HEX_DIGIT | "_")* ~
		ASCII_HEX_DIGIT ~
		(ASCII_HEX_DIGIT | "_")*
	}

	FloatLit = @{
		DecLit ~ "." ~ FloatPointFollow |
		DecLit ~ FloatExponent |
		DecLit ~ "." ~ DecLit ~ FloatExponent? |
		DecLit ~ ("." ~ DecLit)? ~ FloatExponent? ~ FloatSuffix
	}
	FloatPointFollow = _{ !("." | "_" | XID_START) ~ ANY }
	FloatExponent = @{
		^"e" ~ ("+" | "-")? ~
		(ASCII_DIGIT | "_")* ~
		ASCII_DIGIT ~
		(ASCII_DIGIT | "_")*
	}
	FloatSuffix = { "f" | "d" }

	RawString = @{ "r" ~ PUSH("#"*) ~ "\"" ~ RawStringInner ~ "\"" ~ POP }
	RawStringInner = @{ (!("\"" ~ PEEK) ~ ANY)* }
